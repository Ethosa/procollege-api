name: AutoDeploy For API

on:
  push:
    branches:
      - 'dev'
      - 'master'

jobs:
  deploy_dev:
    name: "Деплой на машину 🔨"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Deploy to dev machine
        run: |
          sshpass -p ${{ secrets.MACHINE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.MACHINE_USER }}@${{ secrets.MACHINE_HOST }} "cd /root/procollege-api && git pull"
          sleep 1
          sshpass -p ${{ secrets.MACHINE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.MACHINE_USER }}@${{ secrets.MACHINE_HOST }} "systemctl restart procollege_api"

      - name: Escape bad symbols in variables
        id: escape_vars
        run: |
          # Извлекаем данные из GitHub переменных
          message="${{ github.event.head_commit.message }}"
          actor="${{ github.actor }}"
          branch="${{ github.ref_name }}"

          # Определяем регулярное выражение для плохих символов
          bad_symbols="([[^][]](http[^()]))|[[]()~>#+=|{}.!-]"
          
          # Экранируем символы
          escaped_message=$(echo "$message" | sed 's/[[]()~>#+=|{}.!-]/\\\\&/g')
          escaped_actor=$(echo "$actor" | sed 's/[[]()~>#+=|{}.!-]/\\\\&/g')
          escaped_branch=$(echo "$branch" | sed 's/[[]()~>#+=|{}.!-]/\\\\&/g')

          echo "::set-output name=escaped_message::$escaped_message"
          echo "::set-output name=escaped_actor::$escaped_actor"
          echo "::set-output name=escaped_branch::$escaped_branch"

      - name: Send Telegram Message
        run: |
          curl \
            --data-urlencode 'chat_id=${{ secrets.TELEGRAM_CHAT_ID }}' \
            --data-urlencode 'message_thread_id=${{ secrets.TELEGRAM_MESSAGE_THREAD_ID }}' \
            --data-urlencode 'link_preview_options={"url":"${{ github.event.head_commit.url }}"}' \
            --data-urlencode 'parse_mode=markdownv2' \
            --data-urlencode $'text=🔨 *Backend deploy* 🔨\n\n>${{ steps.escape_vars.outputs.escaped_message }}\n_by [${{ steps.escape_vars.outputs.escaped_actor }}](https://github.com/${{ steps.escape_vars.outputs.escaped_actor }})_ at `${{ steps.escape_vars.outputs.escaped_branch }}`\n\n[commit link](${{ github.event.head_commit.url }})' \
            curl "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage"
